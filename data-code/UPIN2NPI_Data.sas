/* ------------------------------------------------------------ */
/* TITLE:		 Supplemental Physician Data			        */
/* AUTHOR:		 Ian McCarthy									*/
/* 				 Emory University								*/
/* DATE CREATED: 5/12/2015										*/
/* DATE EDITED:  9/8/2017										*/
/* CODE FILE ORDER: Supplemental								*/
/* NOTES:														*/
/*   BENE_CC  Master beneficiary summary file 					*/
/*   MCBSxxxx Medicare Current Beneficiary Survey (Year xxxx) 	*/
/*   MCBSXWLK MCBS Crosswalk 									*/
/*   RIFSxxxx Out/Inpatient and Carrier claims (Year xxxx)  	*/
/*   Medpar   Inpatient claims  								*/
/*   -- File outputs the following tables to IMC969SL:			*/
/*		IMC969SL.PRVN_NPI_Merge_2007 - 2009     				*/
/*		IMC969SL.UPIN_NPI_Merge_2007 and 2008  					*/
/* ------------------------------------------------------------ */

/* ------------------------------------------------------------ */
/* First for 2007 */
/* ------------------------------------------------------------ */

/* Create Table of Inpatient (Hospital Only) Stays */
DATA WORK.InpatientStays_2007;
	SET	RIF2007.INPATIENT_CLAIMS_01
  		RIF2007.INPATIENT_CLAIMS_02
		RIF2007.INPATIENT_CLAIMS_03
		RIF2007.INPATIENT_CLAIMS_04
		RIF2007.INPATIENT_CLAIMS_05
		RIF2007.INPATIENT_CLAIMS_06
		RIF2007.INPATIENT_CLAIMS_07
		RIF2007.INPATIENT_CLAIMS_08
		RIF2007.INPATIENT_CLAIMS_09
		RIF2007.INPATIENT_CLAIMS_10
		RIF2007.INPATIENT_CLAIMS_11
		RIF2007.INPATIENT_CLAIMS_12;
RUN;


/* UPIN to NPI Merge - Primary Merge */
/* -- taking NPI from other claims for same UPIN (if unique) */
PROC SQL;
	DROP TABLE WORK.UPIN_2007;
	CREATE TABLE WORK.UPIN_2007 AS
	SELECT OP_PHYSN_UPIN, OP_PHYSN_NPI AS NPI, count(distinct CLM_ID) AS Claims
	FROM WORK.InpatientStays_2007
	WHERE OP_PHYSN_UPIN NE '' AND OP_PHYSN_NPI NE '0000000000' AND OP_PHYSN_NPI NE ''
	GROUP BY OP_PHYSN_UPIN, OP_PHYSN_NPI;
QUIT;


PROC SORT DATA=WORK.UPIN_2007 OUT=WORK.UPIN_2007;
	BY OP_PHYSN_UPIN DESCENDING Claims;
RUN;

DATA WORK.UPIN_2007;
SET WORK.UPIN_2007;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.UPIN_NPI1_2007;
	CREATE TABLE WORK.UPIN_NPI1_2007 AS
	SELECT OP_PHYSN_UPIN, NPI
	FROM WORK.UPIN_2007
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;

/* UPIN to NPI Merge - Secondary Merge */
/* -- taking matching npi from claims and crosswalk table */
PROC SQL; 
	DROP TABLE WORK.UPIN_NPI_XWLK_2007;
	CREATE TABLE WORK.UPIN_NPI_XWLK_2007 AS 
	SELECT a.OP_PHYSN_UPIN, a.NPI
	FROM WORK.UPIN_2007 AS a
	LEFT JOIN (SELECT DISTINCT upin, npi
				FROM _UPLDS.UPIN2NPIXW 
				WHERE othpidty=2 AND entity=1 AND upintype<4) AS b
	ON a.OP_PHYSN_UPIN=b.upin
	WHERE a.NPI=b.npi;
QUIT;

DATA WORK.UPIN_NPI_XWLK_2007;
SET WORK.UPIN_NPI_XWLK_2007;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.UPIN_NPI2_2007;
	CREATE TABLE WORK.UPIN_NPI2_2007 AS
	SELECT OP_PHYSN_UPIN, NPI
	FROM WORK.UPIN_NPI_XWLK_2007
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;


/* UPIN to NPI Merge - Tertiary Merge */
/* -- taking matching npi from crosswalk table (if unique) */

PROC SQL;
	DROP TABLE WORK.UPINXWLK_2007;
	CREATE TABLE WORK.UPINXWLK_2007 AS
	SELECT DISTINCT OP_PHYSN_UPIN 
	FROM WORK.InpatientStays_2007
	WHERE OP_PHYSN_UPIN NE '' AND (OP_PHYSN_NPI='' OR OP_PHYSN_NPI='0000000000');
QUIT;

PROC SQL; 
	DROP TABLE WORK.XWLKOnly_2007;
	CREATE TABLE WORK.XWLKOnly_2007 AS 
	SELECT a.OP_PHYSN_UPIN, b.npi
	FROM WORK.UPINXWLK_2007 AS a
	LEFT JOIN (SELECT DISTINCT upin, npi
				FROM _UPLDS.UPIN2NPIXW 
				WHERE othpidty=2 AND entity=1 AND upintype<4) AS b
	ON a.OP_PHYSN_UPIN=b.upin
	HAVING b.npi NE '';
QUIT;


DATA WORK.XWLKOnly_2007;
SET WORK.XWLKOnly_2007;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;


PROC SQL;
	DROP TABLE WORK.UPIN_NPI3_2007;
	CREATE TABLE WORK.UPIN_NPI3_2007 AS
	SELECT OP_PHYSN_UPIN, npi AS NPI
	FROM WORK.XWLKOnly_2007
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;


/* UPIN to NPI Final Merge */
PROC SQL;
	DROP TABLE IMC969SL.Unique_UPIN_2007;
	CREATE TABLE IMC969SL.Unique_UPIN_2007 AS
	SELECT DISTINCT OP_PHYSN_UPIN
	FROM WORK.Inpatientstays_2007
	WHERE OP_PHYSN_UPIN NE '';
QUIT;

PROC SQL;
	DROP TABLE IMC969SL.UPIN_NPI_Merge_2007;
	CREATE TABLE IMC969SL.UPIN_NPI_Merge_2007 AS
	SELECT a.OP_PHYSN_UPIN, 
		CASE
			WHEN b.NPI NE '' THEN b.NPI
			WHEN b.NPI='' AND c.NPI NE '' THEN c.NPI
			WHEN b.NPI='' AND c.NPI='' AND d.NPI NE '' THEN d.NPI
		ELSE ''
		END AS NPI
	FROM IMC969SL.Unique_UPIN_2007 AS a
	LEFT JOIN WORK.UPIN_NPI1_2007 AS b
		ON a.OP_PHYSN_UPIN=b.OP_PHYSN_UPIN
	LEFT JOIN WORK.UPIN_NPI2_2007 AS c
		ON a.OP_PHYSN_UPIN=c.OP_PHYSN_UPIN
	LEFT JOIN WORK.UPIN_NPI3_2007 AS d
		ON a.OP_PHYSN_UPIN=d.OP_PHYSN_UPIN;
QUIT;




/* Provider Number to NPI Merge */
/* -- taking NPI from other claims for same Provider Number (if unique) */
PROC SQL;
	DROP TABLE WORK.PRVN_2007;
	CREATE TABLE WORK.PRVN_2007 AS
	SELECT PRVDR_NUM, ORG_NPI_NUM AS NPI, count(distinct CLM_ID) AS Claims
	FROM WORK.InpatientStays_2007
	WHERE PRVDR_NUM NE '' AND ORG_NPI_NUM NE ''
	GROUP BY PRVDR_NUM, ORG_NPI_NUM;
QUIT;

DATA WORK.PRVN_2007;
SET WORK.PRVN_2007;
	IF ANYALPHA(PRVDR_NUM)>0 THEN DELETE;
RUN;

PROC SORT DATA=WORK.PRVN_2007 OUT=WORK.PRVN_2007;
	BY PRVDR_NUM DESCENDING Claims;
RUN;

DATA WORK.PRVN_2007;
SET WORK.PRVN_2007;
	BY PRVDR_NUM;
	IF first.PRVDR_NUM THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.PRVN_NPI1_2007;
	CREATE TABLE WORK.PRVN_NPI1_2007 AS
	SELECT PRVDR_NUM, NPI
	FROM WORK.PRVN_2007
	GROUP BY PRVDR_NUM
	HAVING max(n)=1;
QUIT;

/* Provider Number to NPI Final Merge */
PROC SQL;
	DROP TABLE IMC969SL.Unique_PRVN_2007;
	CREATE TABLE IMC969SL.Unique_PRVN_2007 AS
	SELECT DISTINCT PRVDR_NUM
	FROM WORK.Inpatientstays_2007
	WHERE PRVDR_NUM NE '';
QUIT;

PROC SQL;
	DROP TABLE IMC969SL.PRVN_NPI_Merge_2007;
	CREATE TABLE IMC969SL.PRVN_NPI_Merge_2007 AS
	SELECT a.PRVDR_NUM, b.NPI
	FROM IMC969SL.Unique_PRVN_2007 AS a
	LEFT JOIN WORK.PRVN_NPI1_2007 AS b
		ON a.PRVDR_NUM=b.PRVDR_NUM;
QUIT;








/* ------------------------------------------------------------ */
/* Now for 2008 */
/* ------------------------------------------------------------ */

/* Create Table of Inpatient (Hospital Only) Stays */
DATA WORK.InpatientStays_2008;
	SET	RIF2008.INPATIENT_CLAIMS_01
  		RIF2008.INPATIENT_CLAIMS_02
		RIF2008.INPATIENT_CLAIMS_03
		RIF2008.INPATIENT_CLAIMS_04
		RIF2008.INPATIENT_CLAIMS_05
		RIF2008.INPATIENT_CLAIMS_06
		RIF2008.INPATIENT_CLAIMS_07
		RIF2008.INPATIENT_CLAIMS_08
		RIF2008.INPATIENT_CLAIMS_09
		RIF2008.INPATIENT_CLAIMS_10
		RIF2008.INPATIENT_CLAIMS_11
		RIF2008.INPATIENT_CLAIMS_12;
RUN;


/* UPIN to NPI Merge - Primary Merge */
/* -- taking NPI from other claims for same UPIN (if unique) */
PROC SQL;
	DROP TABLE WORK.UPIN_2008;
	CREATE TABLE WORK.UPIN_2008 AS
	SELECT OP_PHYSN_UPIN, OP_PHYSN_NPI AS NPI, count(distinct CLM_ID) AS Claims
	FROM WORK.InpatientStays_2008
	WHERE OP_PHYSN_UPIN NE '' AND OP_PHYSN_NPI NE '0000000000' AND OP_PHYSN_NPI NE ''
	GROUP BY OP_PHYSN_UPIN, OP_PHYSN_NPI;
QUIT;

PROC SORT DATA=WORK.UPIN_2008 OUT=WORK.UPIN_2008;
	BY OP_PHYSN_UPIN DESCENDING Claims;
RUN;

DATA WORK.UPIN_2008;
SET WORK.UPIN_2008;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.UPIN_NPI1_2008;
	CREATE TABLE WORK.UPIN_NPI1_2008 AS
	SELECT OP_PHYSN_UPIN, NPI
	FROM WORK.UPIN_2008
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;

/* UPIN to NPI Merge - Secondary Merge */
/* -- taking matching npi from claims and crosswalk table */
PROC SQL; 
	DROP TABLE WORK.UPIN_NPI_XWLK_2008;
	CREATE TABLE WORK.UPIN_NPI_XWLK_2008 AS 
	SELECT a.OP_PHYSN_UPIN, a.NPI
	FROM WORK.UPIN_2008 AS a
	LEFT JOIN (SELECT DISTINCT upin, npi
				FROM _UPLDS.UPIN2NPIXW 
				WHERE othpidty=2 AND entity=1 AND upintype<4) AS b
	ON a.OP_PHYSN_UPIN=b.upin
	WHERE a.NPI=b.npi;
QUIT;

DATA WORK.UPIN_NPI_XWLK_2008;
SET WORK.UPIN_NPI_XWLK_2008;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.UPIN_NPI2_2008;
	CREATE TABLE WORK.UPIN_NPI2_2008 AS
	SELECT OP_PHYSN_UPIN, NPI
	FROM WORK.UPIN_NPI_XWLK_2008
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;


/* UPIN to NPI Merge - Tertiary Merge */
/* -- taking matching npi from crosswalk table (if unique) */

PROC SQL;
	DROP TABLE WORK.UPINXWLK_2008;
	CREATE TABLE WORK.UPINXWLK_2008 AS
	SELECT DISTINCT OP_PHYSN_UPIN 
	FROM WORK.InpatientStays_2008
	WHERE OP_PHYSN_UPIN NE '' AND (OP_PHYSN_NPI='' OR OP_PHYSN_NPI='0000000000');
QUIT;

PROC SQL; 
	DROP TABLE WORK.XWLKOnly_2008;
	CREATE TABLE WORK.XWLKOnly_2008 AS 
	SELECT a.OP_PHYSN_UPIN, b.npi
	FROM WORK.UPINXWLK_2008 AS a
	LEFT JOIN (SELECT DISTINCT upin, npi
				FROM _UPLDS.UPIN2NPIXW 
				WHERE othpidty=2 AND entity=1 AND upintype<4) AS b
	ON a.OP_PHYSN_UPIN=b.upin
	HAVING b.npi NE '';
QUIT;


DATA WORK.XWLKOnly_2008;
SET WORK.XWLKOnly_2008;
	BY OP_PHYSN_UPIN;
	IF first.OP_PHYSN_UPIN THEN n=1;
	ELSE n+1;
RUN;


PROC SQL;
	DROP TABLE WORK.UPIN_NPI3_2008;
	CREATE TABLE WORK.UPIN_NPI3_2008 AS
	SELECT OP_PHYSN_UPIN, npi AS NPI
	FROM WORK.XWLKOnly_2008
	GROUP BY OP_PHYSN_UPIN
	HAVING max(n)=1;
QUIT;


/* UPIN to NPI Final Merge */
PROC SQL;
	DROP TABLE IMC969SL.Unique_UPIN_2008;
	CREATE TABLE IMC969SL.Unique_UPIN_2008 AS
	SELECT DISTINCT OP_PHYSN_UPIN
	FROM WORK.Inpatientstays_2008
	WHERE OP_PHYSN_UPIN NE '';
QUIT;

PROC SQL;
	DROP TABLE IMC969SL.UPIN_NPI_Merge_2008;
	CREATE TABLE IMC969SL.UPIN_NPI_Merge_2008 AS
	SELECT a.OP_PHYSN_UPIN, 
		CASE
			WHEN b.NPI NE '' THEN b.NPI
			WHEN b.NPI='' AND c.NPI NE '' THEN c.NPI
			WHEN b.NPI='' AND c.NPI='' AND d.NPI NE '' THEN d.NPI
		ELSE ''
		END AS NPI
	FROM IMC969SL.Unique_UPIN_2008 AS a
	LEFT JOIN WORK.UPIN_NPI1_2008 AS b
		ON a.OP_PHYSN_UPIN=b.OP_PHYSN_UPIN
	LEFT JOIN WORK.UPIN_NPI2_2008 AS c
		ON a.OP_PHYSN_UPIN=c.OP_PHYSN_UPIN
	LEFT JOIN WORK.UPIN_NPI3_2008 AS d
		ON a.OP_PHYSN_UPIN=d.OP_PHYSN_UPIN;
QUIT;


/* Provider Number to NPI Merge */
/* -- taking NPI from other claims for same Provider Number (if unique) */
PROC SQL;
	DROP TABLE WORK.PRVN_2008;
	CREATE TABLE WORK.PRVN_2008 AS
	SELECT PRVDR_NUM, ORG_NPI_NUM AS NPI, count(distinct CLM_ID) AS Claims
	FROM WORK.InpatientStays_2008
	WHERE PRVDR_NUM NE '' AND ORG_NPI_NUM NE ''
	GROUP BY PRVDR_NUM, ORG_NPI_NUM;
QUIT;

DATA WORK.PRVN_2008;
SET WORK.PRVN_2008;
	IF ANYALPHA(PRVDR_NUM)>0 THEN DELETE;
RUN;

PROC SORT DATA=WORK.PRVN_2008 OUT=WORK.PRVN_2008;
	BY PRVDR_NUM DESCENDING Claims;
RUN;

DATA WORK.PRVN_2008;
SET WORK.PRVN_2008;
	BY PRVDR_NUM;
	IF first.PRVDR_NUM THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.PRVN_NPI1_2008;
	CREATE TABLE WORK.PRVN_NPI1_2008 AS
	SELECT PRVDR_NUM, NPI
	FROM WORK.PRVN_2008
	GROUP BY PRVDR_NUM
	HAVING max(n)=1;
QUIT;

/* Provider Number to NPI Final Merge */
PROC SQL;
	DROP TABLE IMC969SL.Unique_PRVN_2008;
	CREATE TABLE IMC969SL.Unique_PRVN_2008 AS
	SELECT DISTINCT PRVDR_NUM
	FROM WORK.Inpatientstays_2008
	WHERE PRVDR_NUM NE '';
QUIT;

PROC SQL;
	DROP TABLE IMC969SL.PRVN_NPI_Merge_2008;
	CREATE TABLE IMC969SL.PRVN_NPI_Merge_2008 AS
	SELECT a.PRVDR_NUM, b.NPI
	FROM IMC969SL.Unique_PRVN_2008 AS a
	LEFT JOIN WORK.PRVN_NPI1_2008 AS b
		ON a.PRVDR_NUM=b.PRVDR_NUM;
QUIT;



/* ------------------------------------------------------------ */
/* Now for 2009 */
/* ------------------------------------------------------------ */

/* Create Table of Inpatient (Hospital Only) Stays */
DATA WORK.InpatientStays_2009;
	SET	RIF2009.INPATIENT_CLAIMS_01
  		RIF2009.INPATIENT_CLAIMS_02
		RIF2009.INPATIENT_CLAIMS_03
		RIF2009.INPATIENT_CLAIMS_04
		RIF2009.INPATIENT_CLAIMS_05
		RIF2009.INPATIENT_CLAIMS_06
		RIF2009.INPATIENT_CLAIMS_07
		RIF2009.INPATIENT_CLAIMS_08
		RIF2009.INPATIENT_CLAIMS_09
		RIF2009.INPATIENT_CLAIMS_10
		RIF2009.INPATIENT_CLAIMS_11
		RIF2009.INPATIENT_CLAIMS_12;
RUN;

/* Provider Number to NPI Merge */
/* -- taking NPI from other claims for same Provider Number (if unique) */
PROC SQL;
	DROP TABLE WORK.PRVN_2009;
	CREATE TABLE WORK.PRVN_2009 AS
	SELECT PRVDR_NUM, ORG_NPI_NUM AS NPI, count(distinct CLM_ID) AS Claims
	FROM WORK.InpatientStays_2009
	WHERE PRVDR_NUM NE '' AND ORG_NPI_NUM NE ''
	GROUP BY PRVDR_NUM, ORG_NPI_NUM;
QUIT;

DATA WORK.PRVN_2009;
SET WORK.PRVN_2009;
	IF ANYALPHA(PRVDR_NUM)>0 THEN DELETE;
RUN;

PROC SORT DATA=WORK.PRVN_2009 OUT=WORK.PRVN_2009;
	BY PRVDR_NUM DESCENDING Claims;
RUN;

DATA WORK.PRVN_2009;
SET WORK.PRVN_2009;
	BY PRVDR_NUM;
	IF first.PRVDR_NUM THEN n=1;
	ELSE n+1;
RUN;

PROC SQL;
	DROP TABLE WORK.PRVN_NPI1_2009;
	CREATE TABLE WORK.PRVN_NPI1_2009 AS
	SELECT PRVDR_NUM, NPI
	FROM WORK.PRVN_2009
	GROUP BY PRVDR_NUM
	HAVING max(n)=1;
QUIT;

/* Provider Number to NPI Final Merge */
PROC SQL;
	DROP TABLE IMC969SL.Unique_PRVN_2009;
	CREATE TABLE IMC969SL.Unique_PRVN_2009 AS
	SELECT DISTINCT PRVDR_NUM
	FROM WORK.Inpatientstays_2009
	WHERE PRVDR_NUM NE '';
QUIT;

PROC SQL;
	DROP TABLE IMC969SL.PRVN_NPI_Merge_2009;
	CREATE TABLE IMC969SL.PRVN_NPI_Merge_2009 AS
	SELECT a.PRVDR_NUM, b.NPI
	FROM IMC969SL.Unique_PRVN_2009 AS a
	LEFT JOIN WORK.PRVN_NPI1_2009 AS b
		ON a.PRVDR_NUM=b.PRVDR_NUM;
QUIT;

